version: '3'

services:
  
  nginx:
    image: nginx:latest
    restart: always
    container_name: sarthi_nginx
    ports:
      - "80:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./nginx-confs:/etc/nginx/conf.d

  sarthi:
    build: .
    restart: always
    ports:
      - 5000:5000
    volumes:
      # hack to bypass file resource sharing error to make my development easy on mac
      # docker mount dir not meant to be used on linux
      # not tested and no support for windows server ðŸ’©
      - ./deployments:${DEPLOYMENTS_MOUNT_DIR}
      - ./nginx-confs:${NGINX_PROXY_CONF_LOCATION}
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      DEPLOYMENTS_MOUNT_DIR: ${DEPLOYMENTS_MOUNT_DIR}
      NGINX_PROXY_CONF_LOCATION: ${NGINX_PROXY_CONF_LOCATION}
      ENV: ${ENV:-local}
      DOMAIN_NAME: ${DOMAIN_NAME:-localhost}
  
  loki:
    image: grafana/loki:latest
    restart: always
    ports:
      - 3100:3100
    volumes:
      - ./logging-config/loki:/etc/loki
    command: -config.file=/etc/loki/loki-config.yaml
    depends_on:
      - promtail

  promtail:
    image: grafana/promtail:latest
    restart: always
    volumes:
      - /var/log:/var/log
      - ./logging-config/promtail:/etc/promtail 
    command: -config.file=/etc/promtail/promtail-config.yaml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-1:/var/lib/grafana
      - ./logging-config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./logging-config/grafana/datasources:/etc/grafana/provisioning/datasources

volumes:
  grafana:
  grafana-1: